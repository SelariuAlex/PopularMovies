{"version":3,"sources":["components/Header/Header.js","config.js","components/MovieImage/MovieImage.js","components/FourColGrid/FourColGrid.js","components/LoadMoreBtn/LoadMoreBtn.js","components/MovieThumb/MovieThumb.js","components/SearchBar/SearchBar.js","components/Spinner/Spinner.js","components/Home/Home.js","components/Navigation/Navigation.js","components/MovieInfo/MovieInfo.js","components/Actor/Actor.js","components/Movie/Movie.js","components/NotFound/NotFound.js","components/Footer/Footer.js","components/ActorInfo/ActorInfo.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","API_URL","API_KEY","IMAGE_BASE_URL","MovieImage","_ref","image","title","text","style","background","concat","FourColGrid","header","loading","children","map","element","i","key","LoadMoreBtn","onClick","MovieThumb","movieId","movieName","clickable","pathname","src","alt","SearchBar","state","value","timeout","doSearch","event","callback","_this","props","setState","target","clearTimeout","setTimeout","this","type","placeholder","onChange","Component","Spinner","Home","movies","movieImage","currentPage","totalPages","searchTerm","searchItems","endpoint","fetchItems","loadMoreItems","_this$state","_this$state2","fetch","then","result","json","Object","toConsumableArray","results","page","total_pages","_this$state3","components_MovieImage_MovieImage","backdrop_path","original_title","overview","components_SearchBar_SearchBar","components_FourColGrid_FourColGrid","components_MovieThumb_MovieThumb","poster_path","id","components_Spinner_Spinner","components_LoadMoreBtn_LoadMoreBtn","Navigation","movie","MovieInfo","directors","min","max","optimum","low","high","vote_average","length","name","Actor","actor","profile_path","actorName","character","Movie","actors","match","params","status_code","crew","filter","member","job","cast","localStorage","setItem","JSON","stringify","catch","error","console","getItem","parse","objectSpread","location","components_Navigation_Navigation","components_MovieInfo_MovieInfo","components_Actor_Actor","NotFound","Footer_Footer","Date","getFullYear","ActorInfo","App","Fragment","components_Header_Header","react_router","path","component","exact","Boolean","window","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.33ad172d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header-content\">\r\n        <Link to=\"/\">\r\n          <h1>Movies</h1>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const API_URL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = 'f98dc1d273be0526711770a13fba0bdc';\r\n\r\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\r\n\r\nconst BACKDROP_SIZE = 'w1280';\r\n\r\nconst POSTER_SIZE = 'w500';\r\n\r\nexport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE };\r\n","import React from 'react';\r\nimport './MovieImage.css';\r\n\r\nconst MovieImage = ({ image, title, text }) => {\r\n  return (\r\n    <div\r\n      className=\"movieimage\"\r\n      style={{\r\n        background: `linear-gradient(to bottom, rgba(0,0,0,0)\r\n      39%,rgba(0,0,0,0)\r\n      41%,rgba(0,0,0,0.65)\r\n      100%),\r\n      url('${image}'), #1c1c1c`\r\n      }}\r\n    >\r\n      <div className=\"movieimage-content\">\r\n        <div className=\"movieimage-text\">\r\n          <h1>{title}</h1>\r\n          <p>{text}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieImage;\r\n","import React from 'react';\r\nimport './FourColGrid.css';\r\n\r\nconst FourColGrid = ({ header, loading, children }) => {\r\n  const renderElements = () => {\r\n    const gridElements = children.map((element, i) => (\r\n      <div key={i} className=\"grid-element\">\r\n        {element}\r\n      </div>\r\n    ));\r\n    return gridElements;\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid\">\r\n      {header && !loading ? <h1>{header}</h1> : null}\r\n      <div className=\"grid-content\">{renderElements()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FourColGrid;\r\n","import React from 'react';\r\nimport './LoadMoreBtn.css';\r\n\r\nconst LoadMoreBtn = ({ text, onClick }) => (\r\n  <div className=\"loadmorebtn\" onClick={onClick}>\r\n    <p>{text}</p>\r\n  </div>\r\n);\r\n\r\nexport default LoadMoreBtn;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './MovieThumb.css';\r\n\r\nconst MovieThumb = ({ image, movieId, movieName, clickable }) => {\r\n  return (\r\n    <div className=\"moviethumb\">\r\n      {clickable ? (\r\n        <Link to={{ pathname: `/${movieId}`, movieName: `${movieName}` }}>\r\n          <img className=\"clickable\" src={image} alt=\"moviethumb\" />\r\n        </Link>\r\n      ) : (\r\n        <img src={image} alt=\"moviethumb\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieThumb;\r\n","import React, { Component } from 'react';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    value: ''\r\n  };\r\n\r\n  timeout = null;\r\n\r\n  doSearch = event => {\r\n    const { callback } = this.props;\r\n\r\n    this.setState({ value: event.target.value });\r\n    clearTimeout(this.timeout);\r\n\r\n    this.timeout = setTimeout(() => {\r\n      callback(this.state.value);\r\n    }, 500);\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <div className=\"searchbar\">\r\n        <div className=\"searchbar-content\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"searchbar-input\"\r\n            placeholder=\"Search\"\r\n            onChange={this.doSearch}\r\n            value={value}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => <div className=\"loader\" />;\r\n\r\nexport default Spinner;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  API_URL,\r\n  API_KEY,\r\n  IMAGE_BASE_URL,\r\n  POSTER_SIZE,\r\n  BACKDROP_SIZE\r\n} from '../../config';\r\nimport MovieImage from '../MovieImage/MovieImage';\r\nimport FourColGrid from '../FourColGrid/FourColGrid';\r\nimport LoadMoreBtn from '../LoadMoreBtn/LoadMoreBtn';\r\nimport MovieThumb from '../MovieThumb/MovieThumb';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\nimport './Home.css';\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    movies: [],\r\n    movieImage: null,\r\n    loading: false,\r\n    currentPage: 0,\r\n    totalPages: 0,\r\n    searchTerm: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n    this.fetchItems(endpoint);\r\n  }\r\n\r\n  searchItems = searchTerm => {\r\n    let endpoint = '';\r\n    this.setState({\r\n      movies: [],\r\n      loading: true,\r\n      searchTerm\r\n    });\r\n\r\n    if (searchTerm === '') {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n    }\r\n    this.fetchItems(endpoint);\r\n  };\r\n\r\n  loadMoreItems = () => {\r\n    const { searchTerm, currentPage } = this.state;\r\n\r\n    let endpoint = '';\r\n    this.setState({ loading: true });\r\n\r\n    if (searchTerm === '') {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage +\r\n        1}`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}&page=${currentPage +\r\n        1}`;\r\n    }\r\n    this.fetchItems(endpoint);\r\n  };\r\n\r\n  fetchItems = endpoint => {\r\n    const { movies, movieImage } = this.state;\r\n\r\n    fetch(endpoint)\r\n      .then(result => result.json())\r\n      .then(result => {\r\n        this.setState({\r\n          movies: [...movies, ...result.results],\r\n          movieImage: movieImage || result.results[0],\r\n          loading: false,\r\n          currentPage: result.page,\r\n          totalPages: result.total_pages\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      movies,\r\n      movieImage,\r\n      loading,\r\n      currentPage,\r\n      totalPages,\r\n      searchTerm\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"home\">\r\n        {movieImage ? (\r\n          <div>\r\n            <MovieImage\r\n              image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${\r\n                movieImage.backdrop_path\r\n              }`}\r\n              title={movieImage.original_title}\r\n              text={movieImage.overview}\r\n            />\r\n            <SearchBar callback={this.searchItems} />\r\n          </div>\r\n        ) : null}\r\n\r\n        <div className=\"home-grid\">\r\n          <FourColGrid\r\n            header={searchTerm ? 'Search Result' : 'Popular Movies'}\r\n            loading={loading}\r\n          >\r\n            {movies.map((element, i) => (\r\n              <MovieThumb\r\n                key={i}\r\n                clickable={true}\r\n                image={\r\n                  element.poster_path\r\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}`\r\n                    : './images/no_image.jpg'\r\n                }\r\n                movieId={element.id}\r\n                movieName={element.original_title}\r\n              />\r\n            ))}\r\n          </FourColGrid>\r\n          {loading ? <Spinner /> : null}\r\n          {currentPage <= totalPages && !loading ? (\r\n            <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({ movie }) => (\r\n  <div className=\"navigation\">\r\n    <div className=\"navigation-content\">\r\n      <Link to=\"/\">\r\n        <p>Home</p>\r\n      </Link>\r\n      <p>/</p>\r\n      <p>{movie}</p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\r\nimport MovieThumb from '../MovieThumb/MovieThumb';\r\nimport './MovieInfo.css';\r\n\r\nconst MovieInfo = ({ movie, directors }) => {\r\n  return (\r\n    <div\r\n      className=\"movieinfo\"\r\n      style={{\r\n        background: movie.backdrop_path\r\n          ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${movie.backdrop_path}')`\r\n          : '#000'\r\n      }}\r\n    >\r\n      <div className=\"movieinfo-content\">\r\n        <div className=\"movieinfo-thumb\">\r\n          <MovieThumb\r\n            image={\r\n              movie.poster_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                : './images/no_image.jpg'\r\n            }\r\n            clickable={false}\r\n          />\r\n        </div>\r\n        <div className=\"movieinfo-text\">\r\n          <h1>{movie.title}</h1>\r\n          <h3>PLOT</h3>\r\n          <p>{movie.overview}</p>\r\n          <h3>IMDB RATING</h3>\r\n          <div className=\"rating\">\r\n            <meter\r\n              min=\"0\"\r\n              max=\"100\"\r\n              optimum=\"100\"\r\n              low=\"40\"\r\n              high=\"70\"\r\n              value={movie.vote_average * 10}\r\n            />\r\n            <p className=\"score\">{movie.vote_average}</p>\r\n          </div>\r\n          {directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\r\n          {directors.map((element, i) => {\r\n            return (\r\n              <p key={i} className=\"director\">\r\n                {element.name}\r\n              </p>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieInfo;\r\n","import React from 'react';\r\nimport { IMAGE_BASE_URL } from '../../config';\r\nimport { Link } from 'react-router-dom';\r\nimport './Actor.css';\r\n\r\nconst Actor = ({ actor, clickable, movieId }) => {\r\n  const POSTER_SIZE = 'w154';\r\n\r\n  return (\r\n    <div className=\"actor\">\r\n      {clickable ? (\r\n        <Link\r\n          to={{\r\n            pathname: `/${movieId}/${actor.profile_path}`,\r\n            actorName: `${actor.name}`\r\n          }}\r\n        >\r\n          <img\r\n            src={\r\n              actor.profile_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n                : './images/no_image.jpg'\r\n            }\r\n            alt=\"actorthumb\"\r\n          />\r\n        </Link>\r\n      ) : (\r\n        <img\r\n          src={\r\n            actor.profile_path\r\n              ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n              : './images/no_image.jpg'\r\n          }\r\n          alt=\"moviethumb\"\r\n        />\r\n      )}\r\n\r\n      <span className=\"actor-name\">{actor.name}</span>\r\n      <span className=\"actor-character\">{actor.character}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Actor;\r\n","import React, { Component } from 'react';\r\nimport { API_URL, API_KEY } from '../../config';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport MovieInfo from '../MovieInfo/MovieInfo';\r\nimport FourColGrid from '../FourColGrid/FourColGrid';\r\nimport Actor from '../Actor/Actor';\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\nimport './Movie.css';\r\n\r\nclass Movie extends Component {\r\n  state = {\r\n    movie: null,\r\n    actors: null,\r\n    directors: [],\r\n    loading: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n\r\n    if (localStorage.getItem(`${movieId}`)) {\r\n      let state = JSON.parse(localStorage.getItem(`${movieId}`));\r\n      this.setState({ ...state });\r\n    } else {\r\n      this.setState({ loading: true });\r\n      let endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\r\n      this.fetchItems(endpoint);\r\n    }\r\n  }\r\n\r\n  fetchItems = endpoint => {\r\n    const { movieId } = this.props.match.params;\r\n\r\n    fetch(endpoint)\r\n      .then(result => result.json())\r\n      .then(result => {\r\n        if (result.status_code) {\r\n          this.setState({ loading: false });\r\n        } else {\r\n          this.setState({ movie: result }, () => {\r\n            let endpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n            fetch(endpoint)\r\n              .then(result => result.json())\r\n              .then(result => {\r\n                const directors = result.crew.filter(\r\n                  member => member.job === 'Director'\r\n                );\r\n\r\n                this.setState(\r\n                  {\r\n                    actors: result.cast,\r\n                    directors,\r\n                    loading: false\r\n                  },\r\n                  () => {\r\n                    localStorage.setItem(\r\n                      `${movieId}`,\r\n                      JSON.stringify(this.state)\r\n                    );\r\n                  }\r\n                );\r\n              });\r\n          });\r\n        }\r\n      })\r\n      .catch(error => console.error('Error:', error));\r\n  };\r\n\r\n  render() {\r\n    const { movieName } = this.props.location;\r\n    const { movieId } = this.props.match.params;\r\n    const { movie, directors, actors, loading } = this.state;\r\n\r\n    return (\r\n      <div className=\"movie\">\r\n        {movie ? (\r\n          <div>\r\n            <Navigation movie={movieName} />\r\n            <MovieInfo movie={movie} directors={directors} />\r\n          </div>\r\n        ) : null}\r\n        {actors ? (\r\n          <div className=\"movie-grid\">\r\n            <FourColGrid header={'Actors'}>\r\n              {actors.map((element, i) => (\r\n                <Actor\r\n                  key={i}\r\n                  actor={element}\r\n                  clickable={true}\r\n                  movieId={movieId}\r\n                  movie={movie}\r\n                />\r\n              ))}\r\n            </FourColGrid>\r\n          </div>\r\n        ) : null}\r\n        {!actors && !loading ? (\r\n          <h1 className=\"not-found\">No movie found</h1>\r\n        ) : null}\r\n        {loading ? <Spinner /> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\nimport './NotFound.css';\r\n\r\nconst NotFound = () => (\r\n  <div className=\"not-found\">\r\n    <h1>404. This page doesn't exist</h1>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nexport default () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      Copyright &copy; {new Date().getFullYear()} Șelariu Alexandru\r\n    </footer>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\n\r\nimport './ActorInfo.css';\r\n\r\nconst ActorInfo = props => {\r\n  return (\r\n    <div className=\"actorinfo\">\r\n      <h1>{props.location.actorName}</h1>\r\n      <div className=\"actorimg\">\r\n        <img\r\n          src={\r\n            props\r\n              ? `${IMAGE_BASE_URL}${POSTER_SIZE}/${props.match.params.actor}`\r\n              : './images/no_image.jpg'\r\n          }\r\n          alt=\"actorthumb\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActorInfo;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport Home from './components/Home/Home';\nimport Movie from './components/Movie/Movie';\nimport NotFound from './components/NotFound/NotFound';\nimport Footer from './components/Footer/Footer';\n\nimport './App.css';\nimport ActorInfo from './components/ActorInfo/ActorInfo';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <Header />\n          <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/:movieId\" component={Movie} exact />\n            <Route path=\"/:movieId//:actor\" component={ActorInfo} exact />\n            <Route component={NotFound} />\n          </Switch>\n          <Footer />\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}